/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package csnd6;

public class CppSound extends Csound {
  private transient long swigCPtr;

  protected CppSound(long cPtr, boolean cMemoryOwn) {
    super(csndJNI.CppSound_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CppSound obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        csndJNI.delete_CppSound(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public CppSound() {
    this(csndJNI.new_CppSound(), true);
  }

  public SWIGTYPE_p_CSOUND_ getCsound() {
    long cPtr = csndJNI.CppSound_getCsound(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_CSOUND_(cPtr, false);
  }

  public int getThis() {
    return csndJNI.CppSound_getThis(swigCPtr, this);
  }

  public CsoundFile getCsoundFile() {
    long cPtr = csndJNI.CppSound_getCsoundFile(swigCPtr, this);
    return (cPtr == 0) ? null : new CsoundFile(cPtr, false);
  }

  public int compile(int argc, SWIGTYPE_p_p_char argv) {
    return csndJNI.CppSound_compile__SWIG_0(swigCPtr, this, argc, SWIGTYPE_p_p_char.getCPtr(argv));
  }

  public int compile() {
    return csndJNI.CppSound_compile__SWIG_1(swigCPtr, this);
  }

  public int getSpoutSize() {
    return csndJNI.CppSound_getSpoutSize(swigCPtr, this);
  }

  public String getOutputSoundfileName() {
    return csndJNI.CppSound_getOutputSoundfileName(swigCPtr, this);
  }

  public int perform(int argc, SWIGTYPE_p_p_char argv) {
    return csndJNI.CppSound_perform__SWIG_0(swigCPtr, this, argc, SWIGTYPE_p_p_char.getCPtr(argv));
  }

  public int perform() {
    return csndJNI.CppSound_perform__SWIG_1(swigCPtr, this);
  }

  public int performKsmps() {
    return csndJNI.CppSound_performKsmps(swigCPtr, this);
  }

  public void cleanup() {
    csndJNI.CppSound_cleanup(swigCPtr, this);
  }

  public void inputMessage(String istatement) {
    csndJNI.CppSound_inputMessage(swigCPtr, this, istatement);
  }

  public void write(String text) {
    csndJNI.CppSound_write(swigCPtr, this, text);
  }

  public boolean getIsCompiled() {
    return csndJNI.CppSound_getIsCompiled(swigCPtr, this);
  }

  public void setIsPerforming(boolean isPerforming) {
    csndJNI.CppSound_setIsPerforming(swigCPtr, this, isPerforming);
  }

  public boolean getIsPerforming() {
    return csndJNI.CppSound_getIsPerforming(swigCPtr, this);
  }

  public boolean getIsGo() {
    return csndJNI.CppSound_getIsGo(swigCPtr, this);
  }

  public void stop() {
    csndJNI.CppSound_stop(swigCPtr, this);
  }

}
