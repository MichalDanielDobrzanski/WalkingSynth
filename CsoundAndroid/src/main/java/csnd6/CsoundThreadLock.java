/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package csnd6;

public class CsoundThreadLock {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected CsoundThreadLock(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CsoundThreadLock obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        csndJNI.delete_CsoundThreadLock(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public int Lock(int milliseconds) {
    return csndJNI.CsoundThreadLock_Lock__SWIG_0(swigCPtr, this, milliseconds);
  }

  public void Lock() {
    csndJNI.CsoundThreadLock_Lock__SWIG_1(swigCPtr, this);
  }

  public int TryLock() {
    return csndJNI.CsoundThreadLock_TryLock(swigCPtr, this);
  }

  public void Unlock() {
    csndJNI.CsoundThreadLock_Unlock(swigCPtr, this);
  }

  public CsoundThreadLock() {
    this(csndJNI.new_CsoundThreadLock__SWIG_0(), true);
  }

  public CsoundThreadLock(int locked) {
    this(csndJNI.new_CsoundThreadLock__SWIG_1(locked), true);
  }

}
