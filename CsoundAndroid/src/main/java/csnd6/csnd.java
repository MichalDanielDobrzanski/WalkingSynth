/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package csnd6;

public class csnd implements csndConstants {
  public static int csoundInitialize(int flags) {
    return csndJNI.csoundInitialize(flags);
  }

  public static SWIGTYPE_p_CSOUND_ csoundCreate(SWIGTYPE_p_void hostData) {
    long cPtr = csndJNI.csoundCreate(SWIGTYPE_p_void.getCPtr(hostData));
    return (cPtr == 0) ? null : new SWIGTYPE_p_CSOUND_(cPtr, false);
  }

  public static void csoundDestroy(SWIGTYPE_p_CSOUND_ arg0) {
    csndJNI.csoundDestroy(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
  }

  public static int csoundGetVersion() {
    return csndJNI.csoundGetVersion();
  }

  public static int csoundGetAPIVersion() {
    return csndJNI.csoundGetAPIVersion();
  }

  public static TREE csoundParseOrc(SWIGTYPE_p_CSOUND_ csound, String str) {
    long cPtr = csndJNI.csoundParseOrc(SWIGTYPE_p_CSOUND_.getCPtr(csound), str);
    return (cPtr == 0) ? null : new TREE(cPtr, false);
  }

  public static int csoundCompileTree(SWIGTYPE_p_CSOUND_ csound, TREE root) {
    return csndJNI.csoundCompileTree(SWIGTYPE_p_CSOUND_.getCPtr(csound), TREE.getCPtr(root), root);
  }

  public static void csoundDeleteTree(SWIGTYPE_p_CSOUND_ csound, TREE tree) {
    csndJNI.csoundDeleteTree(SWIGTYPE_p_CSOUND_.getCPtr(csound), TREE.getCPtr(tree), tree);
  }

  public static int csoundCompileOrc(SWIGTYPE_p_CSOUND_ csound, String str) {
    return csndJNI.csoundCompileOrc(SWIGTYPE_p_CSOUND_.getCPtr(csound), str);
  }

  public static float csoundEvalCode(SWIGTYPE_p_CSOUND_ csound, String str) {
    return csndJNI.csoundEvalCode(SWIGTYPE_p_CSOUND_.getCPtr(csound), str);
  }

  public static int csoundInitializeCscore(SWIGTYPE_p_CSOUND_ arg0, SWIGTYPE_p_FILE insco, SWIGTYPE_p_FILE outsco) {
    return csndJNI.csoundInitializeCscore(SWIGTYPE_p_CSOUND_.getCPtr(arg0), SWIGTYPE_p_FILE.getCPtr(insco), SWIGTYPE_p_FILE.getCPtr(outsco));
  }

  public static int csoundCompileArgs(SWIGTYPE_p_CSOUND_ arg0, int argc, SWIGTYPE_p_p_char argv) {
    return csndJNI.csoundCompileArgs(SWIGTYPE_p_CSOUND_.getCPtr(arg0), argc, SWIGTYPE_p_p_char.getCPtr(argv));
  }

  public static int csoundStart(SWIGTYPE_p_CSOUND_ csound) {
    return csndJNI.csoundStart(SWIGTYPE_p_CSOUND_.getCPtr(csound));
  }

  public static int csoundCompile(SWIGTYPE_p_CSOUND_ arg0, int argc, SWIGTYPE_p_p_char argv) {
    return csndJNI.csoundCompile(SWIGTYPE_p_CSOUND_.getCPtr(arg0), argc, SWIGTYPE_p_p_char.getCPtr(argv));
  }

  public static int csoundCompileCsd(SWIGTYPE_p_CSOUND_ csound, String str) {
    return csndJNI.csoundCompileCsd(SWIGTYPE_p_CSOUND_.getCPtr(csound), str);
  }

  public static int csoundPerform(SWIGTYPE_p_CSOUND_ arg0) {
    return csndJNI.csoundPerform(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
  }

  public static int csoundPerformKsmps(SWIGTYPE_p_CSOUND_ arg0) {
    return csndJNI.csoundPerformKsmps(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
  }

  public static int csoundPerformBuffer(SWIGTYPE_p_CSOUND_ arg0) {
    return csndJNI.csoundPerformBuffer(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
  }

  public static void csoundStop(SWIGTYPE_p_CSOUND_ arg0) {
    csndJNI.csoundStop(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
  }

  public static int csoundCleanup(SWIGTYPE_p_CSOUND_ arg0) {
    return csndJNI.csoundCleanup(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
  }

  public static void csoundReset(SWIGTYPE_p_CSOUND_ arg0) {
    csndJNI.csoundReset(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
  }

  public static float csoundGetSr(SWIGTYPE_p_CSOUND_ arg0) {
    return csndJNI.csoundGetSr(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
  }

  public static float csoundGetKr(SWIGTYPE_p_CSOUND_ arg0) {
    return csndJNI.csoundGetKr(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
  }

  public static long csoundGetKsmps(SWIGTYPE_p_CSOUND_ arg0) {
    return csndJNI.csoundGetKsmps(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
  }

  public static long csoundGetNchnls(SWIGTYPE_p_CSOUND_ arg0) {
    return csndJNI.csoundGetNchnls(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
  }

  public static long csoundGetNchnlsInput(SWIGTYPE_p_CSOUND_ csound) {
    return csndJNI.csoundGetNchnlsInput(SWIGTYPE_p_CSOUND_.getCPtr(csound));
  }

  public static float csoundGet0dBFS(SWIGTYPE_p_CSOUND_ arg0) {
    return csndJNI.csoundGet0dBFS(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
  }

  public static SWIGTYPE_p_int64_t csoundGetCurrentTimeSamples(SWIGTYPE_p_CSOUND_ csound) {
    return new SWIGTYPE_p_int64_t(csndJNI.csoundGetCurrentTimeSamples(SWIGTYPE_p_CSOUND_.getCPtr(csound)), true);
  }

  public static int csoundGetSizeOfMYFLT() {
    return csndJNI.csoundGetSizeOfMYFLT();
  }

  public static SWIGTYPE_p_void csoundGetHostData(SWIGTYPE_p_CSOUND_ arg0) {
    long cPtr = csndJNI.csoundGetHostData(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void csoundSetHostData(SWIGTYPE_p_CSOUND_ arg0, SWIGTYPE_p_void hostData) {
    csndJNI.csoundSetHostData(SWIGTYPE_p_CSOUND_.getCPtr(arg0), SWIGTYPE_p_void.getCPtr(hostData));
  }

  public static int csoundSetOption(SWIGTYPE_p_CSOUND_ csound, String option) {
    return csndJNI.csoundSetOption(SWIGTYPE_p_CSOUND_.getCPtr(csound), option);
  }

  public static void csoundSetParams(SWIGTYPE_p_CSOUND_ csound, CSOUND_PARAMS p) {
    csndJNI.csoundSetParams(SWIGTYPE_p_CSOUND_.getCPtr(csound), CSOUND_PARAMS.getCPtr(p), p);
  }

  public static void csoundGetParams(SWIGTYPE_p_CSOUND_ csound, CSOUND_PARAMS p) {
    csndJNI.csoundGetParams(SWIGTYPE_p_CSOUND_.getCPtr(csound), CSOUND_PARAMS.getCPtr(p), p);
  }

  public static int csoundGetDebug(SWIGTYPE_p_CSOUND_ arg0) {
    return csndJNI.csoundGetDebug(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
  }

  public static void csoundSetDebug(SWIGTYPE_p_CSOUND_ arg0, int debug) {
    csndJNI.csoundSetDebug(SWIGTYPE_p_CSOUND_.getCPtr(arg0), debug);
  }

  public static String csoundGetOutputName(SWIGTYPE_p_CSOUND_ arg0) {
    return csndJNI.csoundGetOutputName(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
  }

  public static void csoundSetOutput(SWIGTYPE_p_CSOUND_ csound, String name, String type, String format) {
    csndJNI.csoundSetOutput(SWIGTYPE_p_CSOUND_.getCPtr(csound), name, type, format);
  }

  public static void csoundSetInput(SWIGTYPE_p_CSOUND_ csound, String name) {
    csndJNI.csoundSetInput(SWIGTYPE_p_CSOUND_.getCPtr(csound), name);
  }

  public static void csoundSetMIDIInput(SWIGTYPE_p_CSOUND_ csound, String name) {
    csndJNI.csoundSetMIDIInput(SWIGTYPE_p_CSOUND_.getCPtr(csound), name);
  }

  public static void csoundSetMIDIFileInput(SWIGTYPE_p_CSOUND_ csound, String name) {
    csndJNI.csoundSetMIDIFileInput(SWIGTYPE_p_CSOUND_.getCPtr(csound), name);
  }

  public static void csoundSetMIDIOutput(SWIGTYPE_p_CSOUND_ csound, String name) {
    csndJNI.csoundSetMIDIOutput(SWIGTYPE_p_CSOUND_.getCPtr(csound), name);
  }

  public static void csoundSetMIDIFileOutput(SWIGTYPE_p_CSOUND_ csound, String name) {
    csndJNI.csoundSetMIDIFileOutput(SWIGTYPE_p_CSOUND_.getCPtr(csound), name);
  }

  public static void csoundSetRTAudioModule(SWIGTYPE_p_CSOUND_ csound, String module) {
    csndJNI.csoundSetRTAudioModule(SWIGTYPE_p_CSOUND_.getCPtr(csound), module);
  }

  public static int csoundGetModule(SWIGTYPE_p_CSOUND_ csound, int number, SWIGTYPE_p_p_char name, SWIGTYPE_p_p_char type) {
    return csndJNI.csoundGetModule(SWIGTYPE_p_CSOUND_.getCPtr(csound), number, SWIGTYPE_p_p_char.getCPtr(name), SWIGTYPE_p_p_char.getCPtr(type));
  }

  public static int csoundGetInputBufferSize(SWIGTYPE_p_CSOUND_ arg0) {
    return csndJNI.csoundGetInputBufferSize(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
  }

  public static int csoundGetOutputBufferSize(SWIGTYPE_p_CSOUND_ arg0) {
    return csndJNI.csoundGetOutputBufferSize(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
  }

  public static SWIGTYPE_p_float csoundGetInputBuffer(SWIGTYPE_p_CSOUND_ arg0) {
    long cPtr = csndJNI.csoundGetInputBuffer(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public static SWIGTYPE_p_float csoundGetOutputBuffer(SWIGTYPE_p_CSOUND_ arg0) {
    long cPtr = csndJNI.csoundGetOutputBuffer(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public static SWIGTYPE_p_float csoundGetSpin(SWIGTYPE_p_CSOUND_ arg0) {
    long cPtr = csndJNI.csoundGetSpin(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public static void csoundAddSpinSample(SWIGTYPE_p_CSOUND_ csound, int frame, int channel, float sample) {
    csndJNI.csoundAddSpinSample(SWIGTYPE_p_CSOUND_.getCPtr(csound), frame, channel, sample);
  }

  public static SWIGTYPE_p_float csoundGetSpout(SWIGTYPE_p_CSOUND_ csound) {
    long cPtr = csndJNI.csoundGetSpout(SWIGTYPE_p_CSOUND_.getCPtr(csound));
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public static float csoundGetSpoutSample(SWIGTYPE_p_CSOUND_ csound, int frame, int channel) {
    return csndJNI.csoundGetSpoutSample(SWIGTYPE_p_CSOUND_.getCPtr(csound), frame, channel);
  }

  public static SWIGTYPE_p_p_void csoundGetRtRecordUserData(SWIGTYPE_p_CSOUND_ arg0) {
    long cPtr = csndJNI.csoundGetRtRecordUserData(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_p_void csoundGetRtPlayUserData(SWIGTYPE_p_CSOUND_ arg0) {
    long cPtr = csndJNI.csoundGetRtPlayUserData(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_void(cPtr, false);
  }

  public static void csoundSetHostImplementedAudioIO(SWIGTYPE_p_CSOUND_ arg0, int state, int bufSize) {
    csndJNI.csoundSetHostImplementedAudioIO(SWIGTYPE_p_CSOUND_.getCPtr(arg0), state, bufSize);
  }

  public static int csoundGetAudioDevList(SWIGTYPE_p_CSOUND_ csound, CS_AUDIODEVICE list, int isOutput) {
    return csndJNI.csoundGetAudioDevList(SWIGTYPE_p_CSOUND_.getCPtr(csound), CS_AUDIODEVICE.getCPtr(list), list, isOutput);
  }

  public static void csoundSetAudioDeviceListCallback(SWIGTYPE_p_CSOUND_ csound, SWIGTYPE_p_f_p_CSOUND__p_CS_AUDIODEVICE_int__int audiodevlist__) {
    csndJNI.csoundSetAudioDeviceListCallback(SWIGTYPE_p_CSOUND_.getCPtr(csound), SWIGTYPE_p_f_p_CSOUND__p_CS_AUDIODEVICE_int__int.getCPtr(audiodevlist__));
  }

  public static void csoundSetMIDIModule(SWIGTYPE_p_CSOUND_ csound, String module) {
    csndJNI.csoundSetMIDIModule(SWIGTYPE_p_CSOUND_.getCPtr(csound), module);
  }

  public static void csoundSetHostImplementedMIDIIO(SWIGTYPE_p_CSOUND_ csound, int state) {
    csndJNI.csoundSetHostImplementedMIDIIO(SWIGTYPE_p_CSOUND_.getCPtr(csound), state);
  }

  public static int csoundGetMIDIDevList(SWIGTYPE_p_CSOUND_ csound, CS_MIDIDEVICE list, int isOutput) {
    return csndJNI.csoundGetMIDIDevList(SWIGTYPE_p_CSOUND_.getCPtr(csound), CS_MIDIDEVICE.getCPtr(list), list, isOutput);
  }

  public static void csoundSetMIDIDeviceListCallback(SWIGTYPE_p_CSOUND_ csound, SWIGTYPE_p_f_p_CSOUND__p_CS_MIDIDEVICE_int__int mididevlist__) {
    csndJNI.csoundSetMIDIDeviceListCallback(SWIGTYPE_p_CSOUND_.getCPtr(csound), SWIGTYPE_p_f_p_CSOUND__p_CS_MIDIDEVICE_int__int.getCPtr(mididevlist__));
  }

  public static int csoundReadScore(SWIGTYPE_p_CSOUND_ csound, String str) {
    return csndJNI.csoundReadScore(SWIGTYPE_p_CSOUND_.getCPtr(csound), str);
  }

  public static double csoundGetScoreTime(SWIGTYPE_p_CSOUND_ arg0) {
    return csndJNI.csoundGetScoreTime(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
  }

  public static int csoundIsScorePending(SWIGTYPE_p_CSOUND_ arg0) {
    return csndJNI.csoundIsScorePending(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
  }

  public static void csoundSetScorePending(SWIGTYPE_p_CSOUND_ arg0, int pending) {
    csndJNI.csoundSetScorePending(SWIGTYPE_p_CSOUND_.getCPtr(arg0), pending);
  }

  public static float csoundGetScoreOffsetSeconds(SWIGTYPE_p_CSOUND_ arg0) {
    return csndJNI.csoundGetScoreOffsetSeconds(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
  }

  public static void csoundSetScoreOffsetSeconds(SWIGTYPE_p_CSOUND_ arg0, float time) {
    csndJNI.csoundSetScoreOffsetSeconds(SWIGTYPE_p_CSOUND_.getCPtr(arg0), time);
  }

  public static void csoundRewindScore(SWIGTYPE_p_CSOUND_ arg0) {
    csndJNI.csoundRewindScore(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
  }

  public static int csoundScoreSort(SWIGTYPE_p_CSOUND_ arg0, SWIGTYPE_p_FILE inFile, SWIGTYPE_p_FILE outFile) {
    return csndJNI.csoundScoreSort(SWIGTYPE_p_CSOUND_.getCPtr(arg0), SWIGTYPE_p_FILE.getCPtr(inFile), SWIGTYPE_p_FILE.getCPtr(outFile));
  }

  public static int csoundScoreExtract(SWIGTYPE_p_CSOUND_ arg0, SWIGTYPE_p_FILE inFile, SWIGTYPE_p_FILE outFile, SWIGTYPE_p_FILE extractFile) {
    return csndJNI.csoundScoreExtract(SWIGTYPE_p_CSOUND_.getCPtr(arg0), SWIGTYPE_p_FILE.getCPtr(inFile), SWIGTYPE_p_FILE.getCPtr(outFile), SWIGTYPE_p_FILE.getCPtr(extractFile));
  }

  public static void csoundMessage(SWIGTYPE_p_CSOUND_ arg0, String format) {
    csndJNI.csoundMessage(SWIGTYPE_p_CSOUND_.getCPtr(arg0), format);
  }

  public static void csoundMessageS(SWIGTYPE_p_CSOUND_ arg0, int attr, String format) {
    csndJNI.csoundMessageS(SWIGTYPE_p_CSOUND_.getCPtr(arg0), attr, format);
  }

  public static void csoundSetDefaultMessageCallback(SWIGTYPE_p_f_p_CSOUND__int_p_q_const__char_va_list__void csoundMessageCallback_) {
    csndJNI.csoundSetDefaultMessageCallback(SWIGTYPE_p_f_p_CSOUND__int_p_q_const__char_va_list__void.getCPtr(csoundMessageCallback_));
  }

  public static int csoundGetMessageLevel(SWIGTYPE_p_CSOUND_ arg0) {
    return csndJNI.csoundGetMessageLevel(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
  }

  public static void csoundSetMessageLevel(SWIGTYPE_p_CSOUND_ arg0, int messageLevel) {
    csndJNI.csoundSetMessageLevel(SWIGTYPE_p_CSOUND_.getCPtr(arg0), messageLevel);
  }

  public static void csoundCreateMessageBuffer(SWIGTYPE_p_CSOUND_ csound, int toStdOut) {
    csndJNI.csoundCreateMessageBuffer(SWIGTYPE_p_CSOUND_.getCPtr(csound), toStdOut);
  }

  public static String csoundGetFirstMessage(SWIGTYPE_p_CSOUND_ csound) {
    return csndJNI.csoundGetFirstMessage(SWIGTYPE_p_CSOUND_.getCPtr(csound));
  }

  public static int csoundGetFirstMessageAttr(SWIGTYPE_p_CSOUND_ csound) {
    return csndJNI.csoundGetFirstMessageAttr(SWIGTYPE_p_CSOUND_.getCPtr(csound));
  }

  public static void csoundPopFirstMessage(SWIGTYPE_p_CSOUND_ csound) {
    csndJNI.csoundPopFirstMessage(SWIGTYPE_p_CSOUND_.getCPtr(csound));
  }

  public static int csoundGetMessageCnt(SWIGTYPE_p_CSOUND_ csound) {
    return csndJNI.csoundGetMessageCnt(SWIGTYPE_p_CSOUND_.getCPtr(csound));
  }

  public static void csoundDestroyMessageBuffer(SWIGTYPE_p_CSOUND_ csound) {
    csndJNI.csoundDestroyMessageBuffer(SWIGTYPE_p_CSOUND_.getCPtr(csound));
  }

  public static int csoundGetChannelPtr(SWIGTYPE_p_CSOUND_ arg0, SWIGTYPE_p_p_float p, String name, int type) {
    return csndJNI.csoundGetChannelPtr(SWIGTYPE_p_CSOUND_.getCPtr(arg0), SWIGTYPE_p_p_float.getCPtr(p), name, type);
  }

  public static int csoundListChannels(SWIGTYPE_p_CSOUND_ arg0, SWIGTYPE_p_p_controlChannelInfo_s lst) {
    return csndJNI.csoundListChannels(SWIGTYPE_p_CSOUND_.getCPtr(arg0), SWIGTYPE_p_p_controlChannelInfo_s.getCPtr(lst));
  }

  public static void csoundDeleteChannelList(SWIGTYPE_p_CSOUND_ arg0, controlChannelInfo_t lst) {
    csndJNI.csoundDeleteChannelList(SWIGTYPE_p_CSOUND_.getCPtr(arg0), controlChannelInfo_t.getCPtr(lst), lst);
  }

  public static int csoundSetControlChannelHints(SWIGTYPE_p_CSOUND_ arg0, String name, controlChannelHints_t hints) {
    return csndJNI.csoundSetControlChannelHints(SWIGTYPE_p_CSOUND_.getCPtr(arg0), name, controlChannelHints_t.getCPtr(hints), hints);
  }

  public static int csoundGetControlChannelHints(SWIGTYPE_p_CSOUND_ arg0, String name, controlChannelHints_t hints) {
    return csndJNI.csoundGetControlChannelHints(SWIGTYPE_p_CSOUND_.getCPtr(arg0), name, controlChannelHints_t.getCPtr(hints), hints);
  }

  public static SWIGTYPE_p_int csoundGetChannelLock(SWIGTYPE_p_CSOUND_ arg0, String name) {
    long cPtr = csndJNI.csoundGetChannelLock(SWIGTYPE_p_CSOUND_.getCPtr(arg0), name);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public static float csoundGetControlChannel(SWIGTYPE_p_CSOUND_ csound, String name, SWIGTYPE_p_int err) {
    return csndJNI.csoundGetControlChannel(SWIGTYPE_p_CSOUND_.getCPtr(csound), name, SWIGTYPE_p_int.getCPtr(err));
  }

  public static void csoundSetControlChannel(SWIGTYPE_p_CSOUND_ csound, String name, float val) {
    csndJNI.csoundSetControlChannel(SWIGTYPE_p_CSOUND_.getCPtr(csound), name, val);
  }

  public static void csoundGetAudioChannel(SWIGTYPE_p_CSOUND_ csound, String name, SWIGTYPE_p_float samples) {
    csndJNI.csoundGetAudioChannel(SWIGTYPE_p_CSOUND_.getCPtr(csound), name, SWIGTYPE_p_float.getCPtr(samples));
  }

  public static void csoundSetAudioChannel(SWIGTYPE_p_CSOUND_ csound, String name, SWIGTYPE_p_float samples) {
    csndJNI.csoundSetAudioChannel(SWIGTYPE_p_CSOUND_.getCPtr(csound), name, SWIGTYPE_p_float.getCPtr(samples));
  }

  public static void csoundGetStringChannel(SWIGTYPE_p_CSOUND_ csound, String name, String string) {
    csndJNI.csoundGetStringChannel(SWIGTYPE_p_CSOUND_.getCPtr(csound), name, string);
  }

  public static void csoundSetStringChannel(SWIGTYPE_p_CSOUND_ csound, String name, String string) {
    csndJNI.csoundSetStringChannel(SWIGTYPE_p_CSOUND_.getCPtr(csound), name, string);
  }

  public static int csoundGetChannelDatasize(SWIGTYPE_p_CSOUND_ csound, String name) {
    return csndJNI.csoundGetChannelDatasize(SWIGTYPE_p_CSOUND_.getCPtr(csound), name);
  }

  public static void csoundSetInputChannelCallback(SWIGTYPE_p_CSOUND_ csound, SWIGTYPE_p_f_p_CSOUND__p_q_const__char_p_void_p_q_const__void__void inputChannelCalback) {
    csndJNI.csoundSetInputChannelCallback(SWIGTYPE_p_CSOUND_.getCPtr(csound), SWIGTYPE_p_f_p_CSOUND__p_q_const__char_p_void_p_q_const__void__void.getCPtr(inputChannelCalback));
  }

  public static void csoundSetOutputChannelCallback(SWIGTYPE_p_CSOUND_ csound, SWIGTYPE_p_f_p_CSOUND__p_q_const__char_p_void_p_q_const__void__void outputChannelCalback) {
    csndJNI.csoundSetOutputChannelCallback(SWIGTYPE_p_CSOUND_.getCPtr(csound), SWIGTYPE_p_f_p_CSOUND__p_q_const__char_p_void_p_q_const__void__void.getCPtr(outputChannelCalback));
  }

  public static int csoundSetPvsChannel(SWIGTYPE_p_CSOUND_ arg0, PVSDATEXT fin, String name) {
    return csndJNI.csoundSetPvsChannel(SWIGTYPE_p_CSOUND_.getCPtr(arg0), PVSDATEXT.getCPtr(fin), fin, name);
  }

  public static int csoundGetPvsChannel(SWIGTYPE_p_CSOUND_ csound, PVSDATEXT fout, String name) {
    return csndJNI.csoundGetPvsChannel(SWIGTYPE_p_CSOUND_.getCPtr(csound), PVSDATEXT.getCPtr(fout), fout, name);
  }

  public static int csoundScoreEvent(SWIGTYPE_p_CSOUND_ arg0, char type, SWIGTYPE_p_float pFields, int numFields) {
    return csndJNI.csoundScoreEvent(SWIGTYPE_p_CSOUND_.getCPtr(arg0), type, SWIGTYPE_p_float.getCPtr(pFields), numFields);
  }

  public static int csoundScoreEventAbsolute(SWIGTYPE_p_CSOUND_ arg0, char type, SWIGTYPE_p_float pfields, int numFields, double time_ofs) {
    return csndJNI.csoundScoreEventAbsolute(SWIGTYPE_p_CSOUND_.getCPtr(arg0), type, SWIGTYPE_p_float.getCPtr(pfields), numFields, time_ofs);
  }

  public static void csoundInputMessage(SWIGTYPE_p_CSOUND_ arg0, String message) {
    csndJNI.csoundInputMessage(SWIGTYPE_p_CSOUND_.getCPtr(arg0), message);
  }

  public static int csoundKillInstance(SWIGTYPE_p_CSOUND_ csound, float instr, String instrName, int mode, int allow_release) {
    return csndJNI.csoundKillInstance(SWIGTYPE_p_CSOUND_.getCPtr(csound), instr, instrName, mode, allow_release);
  }

  public static void csoundKeyPress(SWIGTYPE_p_CSOUND_ arg0, char c) {
    csndJNI.csoundKeyPress(SWIGTYPE_p_CSOUND_.getCPtr(arg0), c);
  }

  public static int csoundRegisterKeyboardCallback(SWIGTYPE_p_CSOUND_ arg0, SWIGTYPE_p_f_p_void_p_void_unsigned_int__int func, SWIGTYPE_p_void userData, long type) {
    return csndJNI.csoundRegisterKeyboardCallback(SWIGTYPE_p_CSOUND_.getCPtr(arg0), SWIGTYPE_p_f_p_void_p_void_unsigned_int__int.getCPtr(func), SWIGTYPE_p_void.getCPtr(userData), type);
  }

  public static void csoundRemoveKeyboardCallback(SWIGTYPE_p_CSOUND_ csound, SWIGTYPE_p_f_p_void_p_void_unsigned_int__int func) {
    csndJNI.csoundRemoveKeyboardCallback(SWIGTYPE_p_CSOUND_.getCPtr(csound), SWIGTYPE_p_f_p_void_p_void_unsigned_int__int.getCPtr(func));
  }

  public static int csoundTableLength(SWIGTYPE_p_CSOUND_ arg0, int table) {
    return csndJNI.csoundTableLength(SWIGTYPE_p_CSOUND_.getCPtr(arg0), table);
  }

  public static float csoundTableGet(SWIGTYPE_p_CSOUND_ arg0, int table, int index) {
    return csndJNI.csoundTableGet(SWIGTYPE_p_CSOUND_.getCPtr(arg0), table, index);
  }

  public static void csoundTableSet(SWIGTYPE_p_CSOUND_ arg0, int table, int index, float value) {
    csndJNI.csoundTableSet(SWIGTYPE_p_CSOUND_.getCPtr(arg0), table, index, value);
  }

  public static void csoundTableCopyOut(SWIGTYPE_p_CSOUND_ csound, int table, SWIGTYPE_p_float dest) {
    csndJNI.csoundTableCopyOut(SWIGTYPE_p_CSOUND_.getCPtr(csound), table, SWIGTYPE_p_float.getCPtr(dest));
  }

  public static void csoundTableCopyIn(SWIGTYPE_p_CSOUND_ csound, int table, SWIGTYPE_p_float src) {
    csndJNI.csoundTableCopyIn(SWIGTYPE_p_CSOUND_.getCPtr(csound), table, SWIGTYPE_p_float.getCPtr(src));
  }

  public static int csoundGetTable(SWIGTYPE_p_CSOUND_ arg0, SWIGTYPE_p_p_float tablePtr, int tableNum) {
    return csndJNI.csoundGetTable(SWIGTYPE_p_CSOUND_.getCPtr(arg0), SWIGTYPE_p_p_float.getCPtr(tablePtr), tableNum);
  }

  public static int csoundGetTableArgs(SWIGTYPE_p_CSOUND_ csound, SWIGTYPE_p_p_float argsPtr, int tableNum) {
    return csndJNI.csoundGetTableArgs(SWIGTYPE_p_CSOUND_.getCPtr(csound), SWIGTYPE_p_p_float.getCPtr(argsPtr), tableNum);
  }

  public static SWIGTYPE_p_void csoundGetNamedGens(SWIGTYPE_p_CSOUND_ arg0) {
    long cPtr = csndJNI.csoundGetNamedGens(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static int csoundNewOpcodeList(SWIGTYPE_p_CSOUND_ arg0, SWIGTYPE_p_p_opcodeListEntry opcodelist) {
    return csndJNI.csoundNewOpcodeList(SWIGTYPE_p_CSOUND_.getCPtr(arg0), SWIGTYPE_p_p_opcodeListEntry.getCPtr(opcodelist));
  }

  public static void csoundDisposeOpcodeList(SWIGTYPE_p_CSOUND_ arg0, opcodeListEntry opcodelist) {
    csndJNI.csoundDisposeOpcodeList(SWIGTYPE_p_CSOUND_.getCPtr(arg0), opcodeListEntry.getCPtr(opcodelist), opcodelist);
  }

  public static int csoundAppendOpcode(SWIGTYPE_p_CSOUND_ arg0, String opname, int dsblksiz, int flags, int thread, String outypes, String intypes, SWIGTYPE_p_f_p_CSOUND__p_void__int iopadr, SWIGTYPE_p_f_p_CSOUND__p_void__int kopadr, SWIGTYPE_p_f_p_CSOUND__p_void__int aopadr) {
    return csndJNI.csoundAppendOpcode(SWIGTYPE_p_CSOUND_.getCPtr(arg0), opname, dsblksiz, flags, thread, outypes, intypes, SWIGTYPE_p_f_p_CSOUND__p_void__int.getCPtr(iopadr), SWIGTYPE_p_f_p_CSOUND__p_void__int.getCPtr(kopadr), SWIGTYPE_p_f_p_CSOUND__p_void__int.getCPtr(aopadr));
  }

  public static SWIGTYPE_p_void csoundCreateThread(SWIGTYPE_p_f_p_void__uintptr_t threadRoutine, SWIGTYPE_p_void userdata) {
    long cPtr = csndJNI.csoundCreateThread(SWIGTYPE_p_f_p_void__uintptr_t.getCPtr(threadRoutine), SWIGTYPE_p_void.getCPtr(userdata));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void csoundGetCurrentThreadId() {
    long cPtr = csndJNI.csoundGetCurrentThreadId();
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_uintptr_t csoundJoinThread(SWIGTYPE_p_void thread) {
    return new SWIGTYPE_p_uintptr_t(csndJNI.csoundJoinThread(SWIGTYPE_p_void.getCPtr(thread)), true);
  }

  public static SWIGTYPE_p_void csoundCreateThreadLock() {
    long cPtr = csndJNI.csoundCreateThreadLock();
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static int csoundWaitThreadLock(SWIGTYPE_p_void lock, int milliseconds) {
    return csndJNI.csoundWaitThreadLock(SWIGTYPE_p_void.getCPtr(lock), milliseconds);
  }

  public static void csoundWaitThreadLockNoTimeout(SWIGTYPE_p_void lock) {
    csndJNI.csoundWaitThreadLockNoTimeout(SWIGTYPE_p_void.getCPtr(lock));
  }

  public static void csoundNotifyThreadLock(SWIGTYPE_p_void lock) {
    csndJNI.csoundNotifyThreadLock(SWIGTYPE_p_void.getCPtr(lock));
  }

  public static void csoundDestroyThreadLock(SWIGTYPE_p_void lock) {
    csndJNI.csoundDestroyThreadLock(SWIGTYPE_p_void.getCPtr(lock));
  }

  public static SWIGTYPE_p_void csoundCreateMutex(int isRecursive) {
    long cPtr = csndJNI.csoundCreateMutex(isRecursive);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void csoundLockMutex(SWIGTYPE_p_void mutex_) {
    csndJNI.csoundLockMutex(SWIGTYPE_p_void.getCPtr(mutex_));
  }

  public static int csoundLockMutexNoWait(SWIGTYPE_p_void mutex_) {
    return csndJNI.csoundLockMutexNoWait(SWIGTYPE_p_void.getCPtr(mutex_));
  }

  public static void csoundUnlockMutex(SWIGTYPE_p_void mutex_) {
    csndJNI.csoundUnlockMutex(SWIGTYPE_p_void.getCPtr(mutex_));
  }

  public static void csoundDestroyMutex(SWIGTYPE_p_void mutex_) {
    csndJNI.csoundDestroyMutex(SWIGTYPE_p_void.getCPtr(mutex_));
  }

  public static SWIGTYPE_p_void csoundCreateBarrier(long max) {
    long cPtr = csndJNI.csoundCreateBarrier(max);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static int csoundDestroyBarrier(SWIGTYPE_p_void barrier) {
    return csndJNI.csoundDestroyBarrier(SWIGTYPE_p_void.getCPtr(barrier));
  }

  public static int csoundWaitBarrier(SWIGTYPE_p_void barrier) {
    return csndJNI.csoundWaitBarrier(SWIGTYPE_p_void.getCPtr(barrier));
  }

  public static void csoundSleep(int milliseconds) {
    csndJNI.csoundSleep(milliseconds);
  }

  public static int csoundRunCommand(SWIGTYPE_p_p_char argv, int noWait) {
    return csndJNI.csoundRunCommand(SWIGTYPE_p_p_char.getCPtr(argv), noWait);
  }

  public static void csoundInitTimerStruct(RTCLOCK arg0) {
    csndJNI.csoundInitTimerStruct(RTCLOCK.getCPtr(arg0), arg0);
  }

  public static double csoundGetRealTime(RTCLOCK arg0) {
    return csndJNI.csoundGetRealTime(RTCLOCK.getCPtr(arg0), arg0);
  }

  public static double csoundGetCPUTime(RTCLOCK arg0) {
    return csndJNI.csoundGetCPUTime(RTCLOCK.getCPtr(arg0), arg0);
  }

  public static long csoundGetRandomSeedFromTime() {
    return csndJNI.csoundGetRandomSeedFromTime();
  }

  public static void csoundSetLanguage(SWIGTYPE_p_cslanguage_t lang_code) {
    csndJNI.csoundSetLanguage(SWIGTYPE_p_cslanguage_t.getCPtr(lang_code));
  }

  public static String csoundGetEnv(SWIGTYPE_p_CSOUND_ csound, String name) {
    return csndJNI.csoundGetEnv(SWIGTYPE_p_CSOUND_.getCPtr(csound), name);
  }

  public static int csoundSetGlobalEnv(String name, String value) {
    return csndJNI.csoundSetGlobalEnv(name, value);
  }

  public static int csoundCreateGlobalVariable(SWIGTYPE_p_CSOUND_ arg0, String name, int nbytes) {
    return csndJNI.csoundCreateGlobalVariable(SWIGTYPE_p_CSOUND_.getCPtr(arg0), name, nbytes);
  }

  public static SWIGTYPE_p_void csoundQueryGlobalVariable(SWIGTYPE_p_CSOUND_ arg0, String name) {
    long cPtr = csndJNI.csoundQueryGlobalVariable(SWIGTYPE_p_CSOUND_.getCPtr(arg0), name);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void csoundQueryGlobalVariableNoCheck(SWIGTYPE_p_CSOUND_ arg0, String name) {
    long cPtr = csndJNI.csoundQueryGlobalVariableNoCheck(SWIGTYPE_p_CSOUND_.getCPtr(arg0), name);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static int csoundDestroyGlobalVariable(SWIGTYPE_p_CSOUND_ arg0, String name) {
    return csndJNI.csoundDestroyGlobalVariable(SWIGTYPE_p_CSOUND_.getCPtr(arg0), name);
  }

  public static int csoundRunUtility(SWIGTYPE_p_CSOUND_ arg0, String name, int argc, SWIGTYPE_p_p_char argv) {
    return csndJNI.csoundRunUtility(SWIGTYPE_p_CSOUND_.getCPtr(arg0), name, argc, SWIGTYPE_p_p_char.getCPtr(argv));
  }

  public static SWIGTYPE_p_p_char csoundListUtilities(SWIGTYPE_p_CSOUND_ arg0) {
    long cPtr = csndJNI.csoundListUtilities(SWIGTYPE_p_CSOUND_.getCPtr(arg0));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public static void csoundDeleteUtilityList(SWIGTYPE_p_CSOUND_ arg0, SWIGTYPE_p_p_char lst) {
    csndJNI.csoundDeleteUtilityList(SWIGTYPE_p_CSOUND_.getCPtr(arg0), SWIGTYPE_p_p_char.getCPtr(lst));
  }

  public static String csoundGetUtilityDescription(SWIGTYPE_p_CSOUND_ arg0, String utilName) {
    return csndJNI.csoundGetUtilityDescription(SWIGTYPE_p_CSOUND_.getCPtr(arg0), utilName);
  }

  public static int csoundRand31(SWIGTYPE_p_int seedVal) {
    return csndJNI.csoundRand31(SWIGTYPE_p_int.getCPtr(seedVal));
  }

  public static void csoundSeedRandMT(CsoundRandMTState p, SWIGTYPE_p_unsigned_int initKey, long keyLength) {
    csndJNI.csoundSeedRandMT(CsoundRandMTState.getCPtr(p), p, SWIGTYPE_p_unsigned_int.getCPtr(initKey), keyLength);
  }

  public static long csoundRandMT(CsoundRandMTState p) {
    return csndJNI.csoundRandMT(CsoundRandMTState.getCPtr(p), p);
  }

  public static int csoundCreateConfigurationVariable(SWIGTYPE_p_CSOUND_ csound, String name, SWIGTYPE_p_void p, int type, int flags, SWIGTYPE_p_void min, SWIGTYPE_p_void max, String shortDesc, String longDesc) {
    return csndJNI.csoundCreateConfigurationVariable(SWIGTYPE_p_CSOUND_.getCPtr(csound), name, SWIGTYPE_p_void.getCPtr(p), type, flags, SWIGTYPE_p_void.getCPtr(min), SWIGTYPE_p_void.getCPtr(max), shortDesc, longDesc);
  }

  public static int csoundSetConfigurationVariable(SWIGTYPE_p_CSOUND_ csound, String name, SWIGTYPE_p_void value) {
    return csndJNI.csoundSetConfigurationVariable(SWIGTYPE_p_CSOUND_.getCPtr(csound), name, SWIGTYPE_p_void.getCPtr(value));
  }

  public static int csoundParseConfigurationVariable(SWIGTYPE_p_CSOUND_ csound, String name, String value) {
    return csndJNI.csoundParseConfigurationVariable(SWIGTYPE_p_CSOUND_.getCPtr(csound), name, value);
  }

  public static csCfgVariable_t csoundQueryConfigurationVariable(SWIGTYPE_p_CSOUND_ csound, String name) {
    long cPtr = csndJNI.csoundQueryConfigurationVariable(SWIGTYPE_p_CSOUND_.getCPtr(csound), name);
    return (cPtr == 0) ? null : new csCfgVariable_t(cPtr, false);
  }

  public static SWIGTYPE_p_p_csCfgVariable_u csoundListConfigurationVariables(SWIGTYPE_p_CSOUND_ csound) {
    long cPtr = csndJNI.csoundListConfigurationVariables(SWIGTYPE_p_CSOUND_.getCPtr(csound));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_csCfgVariable_u(cPtr, false);
  }

  public static void csoundDeleteCfgVarList(SWIGTYPE_p_CSOUND_ csound, SWIGTYPE_p_p_csCfgVariable_u lst) {
    csndJNI.csoundDeleteCfgVarList(SWIGTYPE_p_CSOUND_.getCPtr(csound), SWIGTYPE_p_p_csCfgVariable_u.getCPtr(lst));
  }

  public static int csoundDeleteConfigurationVariable(SWIGTYPE_p_CSOUND_ csound, String name) {
    return csndJNI.csoundDeleteConfigurationVariable(SWIGTYPE_p_CSOUND_.getCPtr(csound), name);
  }

  public static String csoundCfgErrorCodeToString(int errcode) {
    return csndJNI.csoundCfgErrorCodeToString(errcode);
  }

  public static SWIGTYPE_p_void csoundCreateCircularBuffer(SWIGTYPE_p_CSOUND_ csound, int numelem, int elemsize) {
    long cPtr = csndJNI.csoundCreateCircularBuffer(SWIGTYPE_p_CSOUND_.getCPtr(csound), numelem, elemsize);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static int csoundReadCircularBuffer(SWIGTYPE_p_CSOUND_ csound, SWIGTYPE_p_void circular_buffer, SWIGTYPE_p_void out, int items) {
    return csndJNI.csoundReadCircularBuffer(SWIGTYPE_p_CSOUND_.getCPtr(csound), SWIGTYPE_p_void.getCPtr(circular_buffer), SWIGTYPE_p_void.getCPtr(out), items);
  }

  public static int csoundPeekCircularBuffer(SWIGTYPE_p_CSOUND_ csound, SWIGTYPE_p_void circular_buffer, SWIGTYPE_p_void out, int items) {
    return csndJNI.csoundPeekCircularBuffer(SWIGTYPE_p_CSOUND_.getCPtr(csound), SWIGTYPE_p_void.getCPtr(circular_buffer), SWIGTYPE_p_void.getCPtr(out), items);
  }

  public static int csoundWriteCircularBuffer(SWIGTYPE_p_CSOUND_ csound, SWIGTYPE_p_void p, SWIGTYPE_p_void inp, int items) {
    return csndJNI.csoundWriteCircularBuffer(SWIGTYPE_p_CSOUND_.getCPtr(csound), SWIGTYPE_p_void.getCPtr(p), SWIGTYPE_p_void.getCPtr(inp), items);
  }

  public static void csoundFlushCircularBuffer(SWIGTYPE_p_CSOUND_ csound, SWIGTYPE_p_void p) {
    csndJNI.csoundFlushCircularBuffer(SWIGTYPE_p_CSOUND_.getCPtr(csound), SWIGTYPE_p_void.getCPtr(p));
  }

  public static void csoundDestroyCircularBuffer(SWIGTYPE_p_CSOUND_ csound, SWIGTYPE_p_void circularbuffer) {
    csndJNI.csoundDestroyCircularBuffer(SWIGTYPE_p_CSOUND_.getCPtr(csound), SWIGTYPE_p_void.getCPtr(circularbuffer));
  }

  public static int csoundOpenLibrary(SWIGTYPE_p_p_void library, String libraryPath) {
    return csndJNI.csoundOpenLibrary(SWIGTYPE_p_p_void.getCPtr(library), libraryPath);
  }

  public static int csoundCloseLibrary(SWIGTYPE_p_void library) {
    return csndJNI.csoundCloseLibrary(SWIGTYPE_p_void.getCPtr(library));
  }

  public static SWIGTYPE_p_void csoundGetLibrarySymbol(SWIGTYPE_p_void library, String symbolName) {
    long cPtr = csndJNI.csoundGetLibrarySymbol(SWIGTYPE_p_void.getCPtr(library), symbolName);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static int csoundGetKcounter(SWIGTYPE_p_CSOUND_ csound) {
    return csndJNI.csoundGetKcounter(SWIGTYPE_p_CSOUND_.getCPtr(csound));
  }

  public static void gatherArgs(int argc, SWIGTYPE_p_p_char argv, SWIGTYPE_p_std__string commandLine) {
    csndJNI.gatherArgs(argc, SWIGTYPE_p_p_char.getCPtr(argv), SWIGTYPE_p_std__string.getCPtr(commandLine));
  }

  public static void scatterArgs(String commandLine, SWIGTYPE_p_std__vectorT_std__string_t args, SWIGTYPE_p_std__vectorT_char_p_t argv) {
    csndJNI.scatterArgs(commandLine, SWIGTYPE_p_std__vectorT_std__string_t.getCPtr(args), SWIGTYPE_p_std__vectorT_char_p_t.getCPtr(argv));
  }

  public static SWIGTYPE_p_std__string trim(SWIGTYPE_p_std__string value) {
    return new SWIGTYPE_p_std__string(csndJNI.trim(SWIGTYPE_p_std__string.getCPtr(value)), false);
  }

  public static SWIGTYPE_p_std__string trimQuotes(SWIGTYPE_p_std__string value) {
    return new SWIGTYPE_p_std__string(csndJNI.trimQuotes(SWIGTYPE_p_std__string.getCPtr(value)), false);
  }

  public static boolean parseInstrument(String definition, SWIGTYPE_p_std__string preNumber, SWIGTYPE_p_std__string id, SWIGTYPE_p_std__string name, SWIGTYPE_p_std__string postNumber) {
    return csndJNI.parseInstrument(definition, SWIGTYPE_p_std__string.getCPtr(preNumber), SWIGTYPE_p_std__string.getCPtr(id), SWIGTYPE_p_std__string.getCPtr(name), SWIGTYPE_p_std__string.getCPtr(postNumber));
  }

}
