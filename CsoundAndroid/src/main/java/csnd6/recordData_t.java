/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package csnd6;

public class recordData_t {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected recordData_t(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(recordData_t obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        csndJNI.delete_recordData_t(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setCbuf(SWIGTYPE_p_void value) {
    csndJNI.recordData_t_cbuf_set(swigCPtr, this, SWIGTYPE_p_void.getCPtr(value));
  }

  public SWIGTYPE_p_void getCbuf() {
    long cPtr = csndJNI.recordData_t_cbuf_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public void setSfile(SWIGTYPE_p_void value) {
    csndJNI.recordData_t_sfile_set(swigCPtr, this, SWIGTYPE_p_void.getCPtr(value));
  }

  public SWIGTYPE_p_void getSfile() {
    long cPtr = csndJNI.recordData_t_sfile_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public void setThread(SWIGTYPE_p_void value) {
    csndJNI.recordData_t_thread_set(swigCPtr, this, SWIGTYPE_p_void.getCPtr(value));
  }

  public SWIGTYPE_p_void getThread() {
    long cPtr = csndJNI.recordData_t_thread_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public void setRunning(boolean value) {
    csndJNI.recordData_t_running_set(swigCPtr, this, value);
  }

  public boolean getRunning() {
    return csndJNI.recordData_t_running_get(swigCPtr, this);
  }

  public void setCondvar(SWIGTYPE_p_pthread_cond_t value) {
    csndJNI.recordData_t_condvar_set(swigCPtr, this, SWIGTYPE_p_pthread_cond_t.getCPtr(value));
  }

  public SWIGTYPE_p_pthread_cond_t getCondvar() {
    return new SWIGTYPE_p_pthread_cond_t(csndJNI.recordData_t_condvar_get(swigCPtr, this), true);
  }

  public void setMutex(SWIGTYPE_p_pthread_mutex_t value) {
    csndJNI.recordData_t_mutex_set(swigCPtr, this, SWIGTYPE_p_pthread_mutex_t.getCPtr(value));
  }

  public SWIGTYPE_p_pthread_mutex_t getMutex() {
    return new SWIGTYPE_p_pthread_mutex_t(csndJNI.recordData_t_mutex_get(swigCPtr, this), true);
  }

  public recordData_t() {
    this(csndJNI.new_recordData_t(), true);
  }

}
